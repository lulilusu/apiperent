Mybatis+MySql实现用例管理

--  Mysql表结构设计
假如用户管理系统
User表
id、userName、password、age、sex("0"男、"1"女)、permission("0"管理员、"1"普通用户)、isDelete

用例设计:一个表保存一个接口的case（一个表包含多个case数据)
addUser接口取名addUserCase
id、userName、password、sex、age、permission、isDelete、expected(true、false)

getUserInfo接口取名getUserInfoCase
id、userId、expected(getUserInfo : 这里值采用mapper配置文件中查询sql语句的id，测试接口的实际返回数据，然后再用预期结果去再查一次数据库进行断言)

getUserList接口取名getUserListCase
id、userName、age、sex、expected(getUserList)
(通过传入如age用户有效信息，查询出结果进行断言)

login取名loginCase
id、userName、password、expected(接口返回断言)

updataUserInfo取名updataUserInfoCase
id、userId、userName、sex、age、permission、isDelete、expected

-- 配置
数据库配置:
databaseConfig.xml
SqlMapper:SQLMapper.xml    这里分类，后带case标识是测试用例，没有带case标识是预期结果中查询标识

环境接口url配置:
application.properties

testng用例配置:
testng.xml

-- 模块设计
cases:用例编写
一个接口一个类进行编写
1.LoginTest.java
@beforeTest，定义一个测试组，初始化url和httpclients，方便后面调用
getResult方法 获取model get方法获取数据，调用接口传入获取响应，将响应定义String设为返回值
loginTrue、loginFalse，属于loginTrue测试组，一个方法一条用例，连接数据库查询loginCase在SQLMapper.xml写对应语句 调用getResult方法，进行断言

2.AddUserTest.java
adduser方法   @test(dependsOnGroups = "loginTrue")  该条测试用例(方法)依赖loginTrue组的@beforeTest方法
getResult方法  相同逻辑

3.GetUserInfoTest.java
getUserInfo方法
getJosnResult方法
该方法获取的是用户信息所以这里返回值设置JSONArray格式，实际结果和预期结果都转为JSONArray格式进行断言
注意一点返回的USER是对象，先转为List再转为JSONArray


4.GetUserListTest.java
由于是List，对实际结果长度进行遍历，获取expected和actual中值，一个个进行断言

5.UpdataUserInfoTest.java
getResult方法 返回值int类型，返回userId
更新用户信息接口是对数据库进行updata操作，所以判断更新后user表信息是否为空就好了，若是具体判断哪个值会很麻烦。

config:
报告配置 ExtentTestNGIReporterListener.java
测试地址定义 TestConfig.java


model:模型模块根据数据库字段
一张表一个类 根据数据库字段定义变量编写get、set方法
idea安装lombok插件，导入date包
import lombok.Data;
@Data

重写toString使返回成json字符串
@Override
    public String toString() {
        return (
                "{id:" + id + "," +
                "userName:" + userName + "," +
                "passWord:" + password + "," +
                "age:" + age + "," +
                "sex:" + sex + "," +
                "permission:" + permission + "," +
                "isDelete:" + isDelete + "}"
        );


utils:工具类
接口地址拼接配置ConfigFile.java
数据库连接工具类DataBaseUtil.java


